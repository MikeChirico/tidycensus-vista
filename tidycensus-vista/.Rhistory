fullData <- bind_rows(fullData, singleLinkData)
}
View(fullData)
foo <- fullData %>%
mutate(size2 = fullData$size %>%
ifelse(str_detect("[:digit:]-[:digit:]"),
str_subset('(?<=-)[:digit:]+'),
str_subset('([:digit:]+')))
foo <- fullData %>%
mutate(size2 = ifelse(
str_detect(size, "[:digit:]-[:digit:]"),
str_extract(size, "(?<=-)[:digit:]+"),
str_extract(size, "[:digit:]+"))) %>%
select(-size)
write_sheet(foo,
ss = URL,
sheet = "Full Data")
write_sheet(foo,
ss = URL,
sheet = "Full Data")
library(rvest)
library(Rcrawler)
library(tidyverse)
library(googledrive)
library(googlesheets4)
library(curl)
#gets url and extracts links
URL <-' https://docs.google.com/spreadsheets/d/17ratrnWxNZ2s8881mqFjLyO2iQ2WXfI2nMiridYw5dQ/edit#gid=0'
page <- LinkExtractor("https://remoteintech.company", lev = 1)
links <- page[["InternalLinks"]]
#xpath for each of the fields
name <- '//*[@id="main"]/article/div/h1'
blurb <- '//*[@id="main"]/article/div/div[2]/p/text()'
size <- '//*[@id="main"]/article/div/div[3]/p'
remote_status <- '//*[@id="main"]/article/div/div[4]/p'
region <- '//*[@id="main"]/article/div/div[5]/p'
tech <- '//*[@id="main"]/article/div/div[6]/p'
link <- '//*[@id="main"]/article/div/div[1]/a'
#scrapes full list and strops them in full data
fullData <- data_frame()
for(i in 5:length(links)){
singleLink <- links[i]
singleLinkData <- data_frame(name = read_html(singleLink) %>% html_nodes(xpath = name) %>%
html_text() %>%  paste(collapse = ' '),
blurb = read_html(singleLink) %>% html_nodes(xpath = blurb) %>%
html_text() %>%  paste(collapse = ' '),
size = read_html(singleLink) %>% html_nodes(xpath = size) %>%
html_text() %>%  paste(collapse = ' '),
remote_status = read_html(singleLink) %>% html_nodes(xpath = remote_status) %>%
html_text() %>%  paste(collapse = ' '),
region = read_html(singleLink) %>% html_nodes(xpath = region) %>%
html_text() %>%  paste(collapse = ' '),
tech = read_html(singleLink) %>% html_nodes(xpath = tech) %>%
html_text() %>%  paste(collapse = ' '),
link = read_html(singleLink) %>% html_nodes(xpath = link) %>%
html_text() %>%  paste(collapse = ' '))
print(i)
fullData <- bind_rows(fullData, singleLinkData)
}
foobarr <- fullData %>%
mutate(size2 = ifelse(
str_detect(size, "[:digit:]-[:digit:]"),
str_extract(size, "(?<=-)[:digit:]+"),
str_extract(size, "[:digit:]+"))) %>%
select(-size)
with_regions <- foobarr %>%
mutate(is_us = str_detect(tolower(region), "usa|us|america|united states|u.s.|u.s.a")) %>%
mutate(is_europe = str_detect(tolower(region), "europe|france|germany|united kingdom")) %>%
mutate(is_worldwide = str_detect(tolower(region), "worldwide|world")) %>%
mutate(is_unknown = !(is_us|is_europe|is_worldwide))
region_us <- with_regions %>% filter(is_us)
region_europe <- with_regions %>% filter(is_europe)
region_world <- with_regions %>% filter(is_worldwide)
region_na <- with_regions %>% filter(is_unknown)
foobarr <- fullData %>%
mutate(size2 = ifelse(
str_detect(size, "[:digit:]-[:digit:]"),
str_extract(size, "(?<=-)[:digit:]+"),
str_extract(size, "[:digit:]+"))) %>%
select(-size)
with_regions <- foobarr %>%
mutate(is_us = str_detect(tolower(region), "usa|us|america|united states|u.s.|u.s.a")) %>%
mutate(is_europe = str_detect(tolower(region), "europe|france|germany|united kingdom")) %>%
mutate(is_worldwide = str_detect(tolower(region), "worldwide|world")) %>%
mutate(is_unknown = !(is_us|is_europe|is_worldwide))
View(with_regions)
region_na <- with_regions %>% filter(is_unknown)
View(region_na)
newData2 <- region_na$region %>%
str_remove_all(",") %>%
str_remove_all("\\(") %>%
str_remove_all("\\)") %>%
str_remove_all("\\[") %>%
str_remove_all("\\]") %>%
str_remove_all("\\{") %>%
str_remove_all("\\}") %>%
str_remove_all(":") %>%
str_remove_all(";")
splitRegion <- newData2 %>%
str_split(' ')
splitRegion2 <- splitRegion %>% unlist() %>% tolower()
splitRegion3 <- splitRegion2 %>% table() %>% as.data.frame()
names(splitRegion3) <- c("word", "count")
bar <- data_frame( stopWords = stopwords::stopwords())
splitRegion4 <- anti_join(x = splitRegion3, y = bar, by = c("word" = "stopWords"))
View(splitRegion4)
write_sheet(region_us,
ss = URL,
sheet = "US based")
write_sheet(region_world,
ss = URL,
sheet = "Europe based")
write_sheet(region_europe,
ss = URL,
sheet = "Worldwide")
write_sheet(region_na,
ss = URL,
sheet = "Unkown region")
URl
URL
View(foobarr)
write_rds(foobarr, "remote-friendly.rds")
"apple" == "appla"
10variable1 <- c(5,19,10,"apple")
test_vector <- c("dog","fish","pig","parrot")
test_vector[4]
subtract_and_divide<- function(x,y){
x-y
x/y
}
subtract_and_divide(4,8)
subtract_and_divide<- function(x,y){
x-y
x/y
}
subtract_and_divide(4,8)
search_link <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=7fa7aa433b67de98306b00b595194b404cc0e2b09517e5ef78b9887255671bac1dc2ef9e1cf27b04ff8eed6de3298be63fbbf15bfb0c27afda3b0235c15316a10f4b59020fa6d4fabee2f8a80c080d87a0a06b6d3e8a1132791f081dc45ae343c49e0ae01b362e80033fe02af87be2a88118c46b1c687584bd01f73097f089ce87a005a7c983d1eaef59556a1b8cdbfedda9d65db083d97e7f95b6f64fbd5915afc03a026283762feddab34570d0c94640f3b8302c54923db2a0af15d53b800649a650a6e7441f5ebba93b50c3391c826585bbaaf695b430f3fcc3bae3017375bbdc8a561dd2c2cbd08009b4d0040fa2621219539f95b4411ef91fa0cfc375a9c4b755493d0d8627cdc34fd7c6b8290295cc9d1f2c012beeb25af046650700ead73acfcb66362c86b6ba536fce69f4b488be632cfb62b30e263664baede0de3f19de00e0bb20a881beaaafb5da92f64be6392cb8bfe0738c9c9c3df25500792100eb75407d6e017f9d068947d49b47eb7a296c5096938c2832e76f42ae7174efc19d348302a98a990f191624014d4862c6474012e0321fed93e7b222ace504fbad48ad95fe03b8bb08dcada62df77f8e1c6d4a9b49ed84271c1e90feb8902a971cac90d001546fa04fe7898f3dfaf10ae946d45aeec98805029013ebb67fbf0f02e44b99e7f1e329d86064e98e1325ae7c619d683a880bbad3094858565396338ab806ce783d4bfa4d952ebc889d9e333a2ae32633220b9c26f45ca2eb7b0d414d48711099d7a5a2b7c202c5e21c51273f3afd80b9d3b41aa6fe820166737a5c5b613a68a3b0c314deb8bac6a493b03834bb3058b07a5c0f43831a4d9230ae1607530b562bf62cc479ab292ff660b64351031b7fee837804bbe656a344cec143908f970f36cbc5d470359f0c16ffb644f534d2c0b94b1ecd3b0494f89c9c0e1e1089d8cf1fcdf1c3889fc1e17229e3"
?plot
search_link <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=7fa7aa433b67de98306b00b595194b404cc0e2b09517e5ef78b9887255671bac1dc2ef9e1cf27b04ff8eed6de3298be63fbbf15bfb0c27afda3b0235c15316a10f4b59020fa6d4fabee2f8a80c080d87a0a06b6d3e8a1132791f081dc45ae343c49e0ae01b362e80033fe02af87be2a88118c46b1c687584bd01f73097f089ce87a005a7c983d1eaef59556a1b8cdbfedda9d65db083d97e7f95b6f64fbd5915afc03a026283762feddab34570d0c94640f3b8302c54923db2a0af15d53b800649a650a6e7441f5ebba93b50c3391c826585bbaaf695b430f3fcc3bae3017375bbdc8a561dd2c2cbd08009b4d0040fa2621219539f95b4411ef91fa0cfc375a9c4b755493d0d8627cdc34fd7c6b8290295cc9d1f2c012beeb25af046650700ead73acfcb66362c86b6ba536fce69f4b488be632cfb62b30e263664baede0de3f19de00e0bb20a881beaaafb5da92f64be6392cb8bfe0738c9c9c3df25500792100eb75407d6e017f9d068947d49b47eb7a296c5096938c2832e76f42ae7174efc19d348302a98a990f191624014d4862c6474012e0321fed93e7b222ace504fbad48ad95fe03b8bb08dcada62df77f8e1c6d4a9b49ed84271c1e90feb8902a971cac90d001546fa04fe7898f3dfaf10ae946d45aeec98805029013ebb67fbf0f02e44b99e7f1e329d86064e98e1325ae7c619d683a880bbad3094858565396338ab806ce783d4bfa4d952ebc889d9e333a2ae32633220b9c26f45ca2eb7b0d414d48711099d7a5a2b7c202c5e21c51273f3afd80b9d3b41aa6fe820166737a5c5b613a68a3b0c314deb8bac6a493b03834bb3058b07a5c0f43831a4d9230ae1607530b562bf62cc479ab292ff660b64351031b7fee837804bbe656a344cec143908f970f36cbc5d470359f0c16ffb644f534d2c0b94b1ecd3b0494f89c9c0e1e1089d8cf1fcdf1c3889fc1e17229e3"
search_link
open(search_link)
search_link
https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=addc5ad012379f8c6e526199094bf46d55035643e18ad7e7bbaff913461b92a093715d3a860c247017375cc648e70cdbaf13a05915728f203df6689622b8ecd233812b453232c5875aa55ac4aa8780c2e764e393d3c8dbef584545159bdfeddbb4c148e6ecc3253edcb6e507d61c5bee917b4e20c6346da986ed17039697424cf4b52d3a548278ddf6e759836dc45319e502eabe15790bfcb43852c7361a826585baacfe95b430f4ffc6b6e4017377bbd08a501dd2c2cbd0810eb4d0060ba7631e19539f93b44611f91fa3cbc677acc4b755493d0d8227cdc348d2c1b92352ff9edc486c5869b6eb1bf4272c4647b98a2b8fb8256770d0eff81a289628b9befffd2e69be23e1452a4532e3bdb9887615cb74b4f877aea193a7b8beda94fd48e86131afbbf560cfa7d924c858107c3115b33060607d082ab50bc86fc89b5aa0344623748880973f2da64848a87a3ad8c1d27ca90cb184de2647590a054a536ec541185bc72047acfdd1a53ca6f91bb29f58ecdcd40bbfae18dcaaac7f9a3bb3076c449a5cf2883a1d0b90feae972a8b1db18adc656379ba4de8d7cc1cb8b736f44dc159e6d48305159006fba879bb1b48c946d7a2d0df2acf6277f29f4a4ce0526695622d9746eee912470c6b45813287a446814c3d14ae65992ff7ac8d9a34336fb01f2037179024fb04ebdc6d42096d4466069a859df786d600def85902042839a9abae8cfd2dbabdc524627c3771507073249fafc805c7adeed3dba4a13c30a32b5ab47d470f0a90741ed475f90e1057593536ce21cb68ab2373bf41a75118585839b6d0381baaea1ee801939c0596bdac112bd7c4c87733970842a1e846e7539994b73e4e8a7410a5b7d4ae081743b8d0845794ac8bd1c99ca7606a9a4cfba17f9fdc06d86b7305dc08eb2dc982b0c3c3f9bd4900f304f6d948e170118b8950c4c78c98f79e5a1fa81ef5717e415588224b9d56d26a7ee5fc25a2f7baef3550c7eb56177e004a1ca42906cae76c66e14df58f0f73b4343e373bbd85ee0225
one_year <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=7fa7aa433b67de98306b00b595194b404cc0e2b09517e5ef78b9887255671bac1dc2ef9e1cf27b04ff8eed6de3298be63fbbf15bfb0c27afda3b0235c15316a10f4b59020fa6d4fabee2f8a80c080d87a0a06b6d3e8a1132791f081dc45ae343c49e0ae01b362e80033fe02af87be2a88118c46b1c687584bd01f73097f089ce87a005a7c983d1eaef59556a1b8cdbfedda9d65db083d97e7f95b6f64fbd5915afc03a026283762feddab34570d0c94640f3b8302c54923db2a0af15d53b800649a650a6e7441f5ebba93b50c3391c826585bbaaf695b430f3fcc3bae3017375bbdc8a561dd2c2cbd08009b4d0040fa2621219539f95b4411ef91fa0cfc375a9c4b755493d0d8627cdc34fd7c6b8290295cc9d1f2c012beeb25af046650700ead73acfcb66362c86b6ba536fce69f4b488be632cfb62b30e263664baede0de3f19de00e0bb20a881beaaafb5da92f64be6392cb8bfe0738c9c9c3df25500792100eb75407d6e017f9d068947d49b47eb7a296c5096938c2832e76f42ae7174efc19d348302a98a990f191624014d4862c6474012e0321fed93e7b222ace504fbad48ad95fe03b8bb08dcada62df77f8e1c6d4a9b49ed84271c1e90feb8902a971cac90d001546fa04fe7898f3dfaf10ae946d45aeec98805029013ebb67fbf0f02e44b99e7f1e329d86064e98e1325ae7c619d683a880bbad3094858565396338ab806ce783d4bfa4d952ebc889d9e333a2ae32633220b9c26f45ca2eb7b0d414d48711099d7a5a2b7c202c5e21c51273f3afd80b9d3b41aa6fe820166737a5c5b613a68a3b0c314deb8bac6a493b03834bb3058b07a5c0f43831a4d9230ae1607530b562bf62cc479ab292ff660b64351031b7fee837804bbe656a344cec143908f970f36cbc5d470359f0c16ffb644f534d2c0b94b1ecd3b0494f89c9c0e1e1089d8cf1fcdf1c3889fc1e17229e3"
two_year <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=addc5ad012379f8c6e526199094bf46d55035643e18ad7e7bbaff913461b92a093715d3a860c247017375cc648e70cdbaf13a05915728f203df6689622b8ecd233812b453335c78759ab56c1ac8780c2e764e393d3c8dbef584545159bdfeddbb4c148e6ecc3253edcb6e507d61c5bee917b4e20c6346da986ed17039697424cf4b52d3a578278ddf6e759836dc45319e502eabe15790bfcb43852c7361a826585baacfe95b430f4ffc6b6e4017377bbd08a501dd2c2cbd0810eb4d0060ba7631e19539f93b44611f91fa3cbc677acc4b755493d0d8227cdc348d2c1b92352ff9edc486c5869b6eb1bf4272c4647b98a2b8fb8256770d0eff81a289628b9befffd2e69be23e1452a4532e3bdb9887615cb74b4f877aea193a7b8beda94fd48e86131afbbf560cfa7d924c858107c3115b33060607d082ab50bc86fc89b5aa0344623748880973f2da64848a87a3ad8c1d27ca90cb184de2647590a054a536ec541185bc72047acfdd1a53ca6f91bb29f58ecdcd40bbfae18dcaaac7f9a3bb3076c449a5cf2883a1d0b90feae972a8b1db18adc656379ba4de8d7cc1cb8b736f44dc159e6d48305159006fba879bb1b48c946d7a2d0df2acf6277f29f4a4ce0526695622d9746eee912470c6b45813287a446814c3d14ae65992ff7ac8d9a34336fb01f2037179024fb04ebdc6d42096d4466069a859df786d600def85902042839a9abae8cfd2dbabdc524627c3771507073249fafc805c7adeed3dba4a13c30a32b5ab47d470f0a90741ed475f90e1057593536ce21cb68ab2373bf41a75118585839b6d0381baaea1ee801939c0596bdac112bd7c4c87733970842a1e846e7539994b73e4e8a7410a5b7d4ae081743b8d0845794ac8bd1c99ca7606a9a4cfba17f9fdc06d86b7305dc08eb20c481b0c3c3f9bd1c55df3ff3cc59fc7808909e468ac88e9af49f5e1baa739b767848568f371eb17ad56c64e2e022bfeef7e3344edbe9480c641c4c0de45016fde16768f153ebc74f7fbc3f3d303eb481ea0525"
table_xpath <- '//*[@id="SpContent_Container"]/table'
one_year %>%
read_html
one_year %>%
read_html()
library(tidyverse)
library(nycflights13)
library(lubridate)
library(gridExtra)
library(rvest)
library(tidytext)
library(data.table)
library(stringr)
library(leaflet)
library(geojsonio)
library(textdata)
library(shiny)
library(readxl)
library(ggimage)
library(rtweet)
library(spotifyr)
library(readxl)
library(quantreg)
library(jobbR)
library(ggbeeswarm)
library(kableExtra)
library(nbastatR)
one_year_table <- one_year %>%
read_html() %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_node(xpath = table_xpath) %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = table_xpath) %>%
html_table()
View(one_year_table)
table_xpath <- '//*[@id="SpContent_Container"]/table'
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = table_xpath) %>%
html_table()
table_xpath <- '//*[@id="SpContent_Container"]/table/tbody'
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = table_xpath) %>%
html_table()
View(one_year_table)
one_year_table <- one_year %>%
read_html() %>%
html_node(xpath = table_xpath) %>%
html_table()
table_xpath <- '//*[@id="SpContent_Container"]/table/'
one_year_table <- one_year %>%
read_html() %>%
html_node(xpath = table_xpath) %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = table_xpath) %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = table_xpath) %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = table_xpath) %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = table_xpath) %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes('tr')
View(one_year_table)
one_year_table <- one_year %>%
read_html() %>%
html_nodes('tr')
one_year_table[[3]]
one_year_table[3]
View(one_year_table)
one_year_table[[3]],1
View(one_year_table)
one_year_table <- one_year_table[3]
View(one_year_table)
one_year_table <- one_year %>%
read_html() %>%
html_nodes('tr')
one_year_table2 <- one_year_table[3][1]
View(one_year_table2)
one_year_table2 <- one_year_table[[3]][1]
View(one_year_table2)
one_year_table2 <- one_year_table[3]
View(one_year_table2)
tab3 <- xml_child(one_year_table2[[1]], 1)
View(tab3)
tab3 <- xml_child(one_year_table2[[1]], 1) %>% html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes('tr') %>%
html_table
one_year_table <- one_year %>%
read_html() %>%
html_nodes('table') %>%
html_table
one_year_table <- one_year %>%
read_html() %>%
html_nodes('tr')
View(one_year_table)
xml_attrs(xml_child(xml_child(xml_child(one_year_table[[3]]))))
table_xpath <- 'document.querySelector("#SpContent_Container > table")'
one_year_table <- one_year %>%
read_html() %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(css = 'document.querySelector("#SpContent_Container > table")') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[3]') %>%
html_table()
View(one_year_table2)
one_year_table[[1]] %>% html_table()
one_year_table[1] %>% html_table()
View(one_year_table2)
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[3]') %>%
html_table()
View(one_year_table)
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[3]') %>%
html_table()
View(page)
one_year <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=7fa7aa433b67de98306b00b595194b404cc0e2b09517e5ef78b9887255671bac1dc2ef9e1cf27b04ff8eed6de3298be63fbbf15bfb0c27afda3b0235c15316a10f4b59020fa6d4fabee2f8a80c080d87a0a06b6d3e8a1132791f081dc45ae343c49e0ae01b362e80033fe02af87be2a88118c46b1c687584bd01f73097f089ce87a005a7c983d1eaef59556a1b8cdbfedda9d65db083d97e7f95b6f64fbd5915afc03a026283762feddab34570d0c94640f3b8302c54923db2a0af15d53b800649a650a6e7441f5ebba93b50c3391c826585bbaaf695b430f3fcc3bae3017375bbdc8a561dd2c2cbd08009b4d0040fa2621219539f95b4411ef91fa0cfc375a9c4b755493d0d8627cdc34fd7c6b8290295cc9d1f2c012beeb25af046650700ead73acfcb66362c86b6ba536fce69f4b488be632cfb62b30e263664baede0de3f19de00e0bb20a881beaaafb5da92f64be6392cb8bfe0738c9c9c3df25500792100eb75407d6e017f9d068947d49b47eb7a296c5096938c2832e76f42ae7174efc19d348302a98a990f191624014d4862c6474012e0321fed93e7b222ace504fbad48ad95fe03b8bb08dcada62df77f8e1c6d4a9b49ed84271c1e90feb8902a971cac90d001546fa04fe7898f3dfaf10ae946d45aeec98805029013ebb67fbf0f02e44b99e7f1e329d86064e98e1325ae7c619d683a880bbad3094858565396338ab806ce783d4bfa4d952ebc889d9e333a2ae32633220b9c26f45ca2eb7b0d414d48711099d7a5a2b7c202c5e21c51273f3afd80b9d3b41aa6fe820166737a5c5b613a68a3b0c314deb8bac6a493b03834bb3058b07a5c0f43831a4d9230ae1607530b562bf62cc479ab292ff660b64351031b7fee837804bbe656a344cec143908f970f36cbc5d470359f0c16ffb644f534d2c0b94b1ecd3b0494f89c9c0e1e1089d8cf1fcdf1c3889fc1e17229e3"
two_year <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=addc5ad012379f8c6e526199094bf46d55035643e18ad7e7bbaff913461b92a093715d3a860c247017375cc648e70cdbaf13a05915728f203df6689622b8ecd233812b453335c78759ab56c1ac8780c2e764e393d3c8dbef584545159bdfeddbb4c148e6ecc3253edcb6e507d61c5bee917b4e20c6346da986ed17039697424cf4b52d3a578278ddf6e759836dc45319e502eabe15790bfcb43852c7361a826585baacfe95b430f4ffc6b6e4017377bbd08a501dd2c2cbd0810eb4d0060ba7631e19539f93b44611f91fa3cbc677acc4b755493d0d8227cdc348d2c1b92352ff9edc486c5869b6eb1bf4272c4647b98a2b8fb8256770d0eff81a289628b9befffd2e69be23e1452a4532e3bdb9887615cb74b4f877aea193a7b8beda94fd48e86131afbbf560cfa7d924c858107c3115b33060607d082ab50bc86fc89b5aa0344623748880973f2da64848a87a3ad8c1d27ca90cb184de2647590a054a536ec541185bc72047acfdd1a53ca6f91bb29f58ecdcd40bbfae18dcaaac7f9a3bb3076c449a5cf2883a1d0b90feae972a8b1db18adc656379ba4de8d7cc1cb8b736f44dc159e6d48305159006fba879bb1b48c946d7a2d0df2acf6277f29f4a4ce0526695622d9746eee912470c6b45813287a446814c3d14ae65992ff7ac8d9a34336fb01f2037179024fb04ebdc6d42096d4466069a859df786d600def85902042839a9abae8cfd2dbabdc524627c3771507073249fafc805c7adeed3dba4a13c30a32b5ab47d470f0a90741ed475f90e1057593536ce21cb68ab2373bf41a75118585839b6d0381baaea1ee801939c0596bdac112bd7c4c87733970842a1e846e7539994b73e4e8a7410a5b7d4ae081743b8d0845794ac8bd1c99ca7606a9a4cfba17f9fdc06d86b7305dc08eb20c481b0c3c3f9bd1c55df3ff3cc59fc7808909e468ac88e9af49f5e1baa739b767848568f371eb17ad56c64e2e022bfeef7e3344edbe9480c641c4c0de45016fde16768f153ebc74f7fbc3f3d303eb481ea0525"
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[3]') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[3]')
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[3]') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[3]') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[(@id = "SpContent_Container")]//td | //*[contains(concat( " ", @class, " " ), concat( " ", "altitem", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//b') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[(@id = "SpContent_Container")]//td | //*[contains(concat( " ", @class, " " ), concat( " ", "altitem", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//b') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[(@id = "SpContent_Container")]//td | //*[contains(concat( " ", @class, " " ), concat( " ", "altitem", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//b')
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[(@id = "SpContent_Container")]//td | //*[contains(concat( " ", @class, " " ), concat( " ", "altitem", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//a | //*[contains(concat( " ", @class, " " ), concat( " ", "item", " " ))]//b')
'//*[@id="SpContent_Container"]/table'
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_table()
page <- LinkExtractor(one_year, lev = 1)
library(Rcrawler)
page <- LinkExtractor(one_year, lev = 1)
links <- page[["InternalLinks"]]
View(page)
one_year_table <- one_year %>%
read_html() %>%
html_nodes('href')
one_year_table <- one_year %>%
read_html() %>%
html_nodes('href')
one_year_table <- one_year %>%
read_html() %>%
html_nodes('a')
View(one_year_table)
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes('a')
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(xpath = '//a')
one_year_table <- one_year %>%
read_html() %>%
#html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(xpath = '//a')
View(one_year_table)
one_year_table <- one_year %>%
read_html() %>%
#html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(xpath = '//a') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
#html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(xpath = '//a') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_text()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_attr()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_attr()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(css = '.tbl_0 b') %>%
html_attr()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(css = '.tbl_0 b') %>%
html_attr()
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[contains(concat( " ", @class, " " ), concat( " ", "tbl_0", " " ))]//b') %>%
html_attr()
page <- LinkExtractor(one_year, lev = 1)
page <- LinkExtractor(one_year, lev = 2)
View(page)
?LinkExtractor
page <- LinkExtractor(one_year)
View(page)
View(page)
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[25]/td[1]/div/a')
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table/tbody/tr[25]/td[1]/div/a')
one_year <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=7fa7aa433b67de98306b00b595194b404cc0e2b09517e5ef78b9887255671bac1dc2ef9e1cf27b04ff8eed6de3298be63fbbf15bfb0c27afda3b0235c15316a10f4b59020fa6d4fabee2f8a80c080d87a0a06b6d3e8a1132791f081dc45ae343c49e0ae01b362e80033fe02af87be2a88118c46b1c687584bd01f73097f089ce87a005a7c983d1eaef59556a1b8cdbfedda9d65db083d97e7f95b6f64fbd5915afc03a026283762feddab34570d0c94640f3b8302c54923db2a0af15d53b800649a650a6e7441f5ebba93b50c3391c826585bbaaf695b430f3fcc3bae3017375bbdc8a561dd2c2cbd08009b4d0040fa2621219539f95b4411ef91fa0cfc375a9c4b755493d0d8627cdc34fd7c6b8290295cc9d1f2c012beeb25af046650700ead73acfcb66362c86b6ba536fce69f4b488be632cfb62b30e263664baede0de3f19de00e0bb20a881beaaafb5da92f64be6392cb8bfe0738c9c9c3df25500792100eb75407d6e017f9d068947d49b47eb7a296c5096938c2832e76f42ae7174efc19d348302a98a990f191624014d4862c6474012e0321fed93e7b222ace504fbad48ad95fe03b8bb08dcada62df77f8e1c6d4a9b49ed84271c1e90feb8902a971cac90d001546fa04fe7898f3dfaf10ae946d45aeec98805029013ebb67fbf0f02e44b99e7f1e329d86064e98e1325ae7c619d683a880bbad3094858565396338ab806ce783d4bfa4d952ebc889d9e333a2ae32633220b9c26f45ca2eb7b0d414d48711099d7a5a2b7c202c5e21c51273f3afd80b9d3b41aa6fe820166737a5c5b613a68a3b0c314deb8bac6a493b03834bb3058b07a5c0f43831a4d9230ae1607530b562bf62cc479ab292ff660b64351031b7fee837804bbe656a344cec143908f970f36cbc5d470359f0c16ffb644f534d2c0b94b1ecd3b0494f89c9c0e1e1089d8cf1fcdf1c3889fc1e17229e3"
two_year <- "https://www.vermonttechnologyalliance.org/networking/search_results.asp?__ASPVIEWSTATE=addc5ad012379f8c6e526199094bf46d55035643e18ad7e7bbaff913461b92a093715d3a860c247017375cc648e70cdbaf13a05915728f203df6689622b8ecd233812b453335c78759ab56c1ac8780c2e764e393d3c8dbef584545159bdfeddbb4c148e6ecc3253edcb6e507d61c5bee917b4e20c6346da986ed17039697424cf4b52d3a578278ddf6e759836dc45319e502eabe15790bfcb43852c7361a826585baacfe95b430f4ffc6b6e4017377bbd08a501dd2c2cbd0810eb4d0060ba7631e19539f93b44611f91fa3cbc677acc4b755493d0d8227cdc348d2c1b92352ff9edc486c5869b6eb1bf4272c4647b98a2b8fb8256770d0eff81a289628b9befffd2e69be23e1452a4532e3bdb9887615cb74b4f877aea193a7b8beda94fd48e86131afbbf560cfa7d924c858107c3115b33060607d082ab50bc86fc89b5aa0344623748880973f2da64848a87a3ad8c1d27ca90cb184de2647590a054a536ec541185bc72047acfdd1a53ca6f91bb29f58ecdcd40bbfae18dcaaac7f9a3bb3076c449a5cf2883a1d0b90feae972a8b1db18adc656379ba4de8d7cc1cb8b736f44dc159e6d48305159006fba879bb1b48c946d7a2d0df2acf6277f29f4a4ce0526695622d9746eee912470c6b45813287a446814c3d14ae65992ff7ac8d9a34336fb01f2037179024fb04ebdc6d42096d4466069a859df786d600def85902042839a9abae8cfd2dbabdc524627c3771507073249fafc805c7adeed3dba4a13c30a32b5ab47d470f0a90741ed475f90e1057593536ce21cb68ab2373bf41a75118585839b6d0381baaea1ee801939c0596bdac112bd7c4c87733970842a1e846e7539994b73e4e8a7410a5b7d4ae081743b8d0845794ac8bd1c99ca7606a9a4cfba17f9fdc06d86b7305dc08eb20c481b0c3c3f9bd1c55df3ff3cc59fc7808909e468ac88e9af49f5e1baa739b767848568f371eb17ad56c64e2e022bfeef7e3344edbe9480c641c4c0de45016fde16768f153ebc74f7fbc3f3d303eb481ea0525"
one_year_table <- one_year %>%
read_html() %>%
#html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(xpath = '//a') %>%
html_table()
one_year_table <- one_year %>%
read_html() %>%
#html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(xpath = '//a')
View(one_year_table)
one_year_table
View(one_year_table)
one_year_table[[30]]
one_year_table[[38]]
one_year_table[[43]]
one_year_table[[45]]
one_year_table[[52]]
one_year_table[[53]]
one_year_table[[55]]
one_year_table[[60]]
one_year_table[[67]]
one_year_table[[76]]
one_year_table[[78]]
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table') %>%
html_nodes(css = '.item')
View(one_year_table)
one_year_table <- one_year %>%
read_html() %>%
html_nodes(xpath = '//*[@id="SpContent_Container"]/table')
library(shiny)
library(tidyverse)
library(tidycensus)
library(leaflet)
library(mapview)
runApp('tidycensus-proj/tidycensus-vista')
library(sf)
runApp('tidycensus-proj/tidycensus-vista')
census_data2 <- readRDS("test_data2.rds")
setwd("~/Desktop/tidycensus-proj/tidycensus-vista")
census_data2 <- readRDS("test_data2.rds")
View(census_data2)
View(census_data2)
censusdata2 %>%  filter(variable = "DP03_0074P")
census_data2 %>%  filter(variable = "DP03_0074P")
census_data2 %>%  filter(variable == "DP03_0074P")
census_data2 %>%  filter(variable == "DP03_0074P") %>% View()
runApp()
runApp()
census_data2 %>%  filter(variable == "DP03_0074P") %>% summarise(fivenum(estimate))
runApp()
View(census_data2)
runApp()
v19 <- load_variables(2019, "acs5", cache = TRUE)
v19 <- load_variables(2019, "acs5", cache = TRUE)
View(v19)
runApp()
View(v19)
runApp()
vt <- get_acs(geography = "zcta",
variables = c(med_income = "B19013_001",
broadband = "B28002_004",
cash_assistance = "DP03_0072PE",
food_stamps = "B19058_002"),
state = "VT",
geometry = TRUE,
year = 2019)
#
toy <- spread(vt, variable, estimate) %>%
select(-moe)  %>%
gather(var, val, -c(GEOID, NAME, geometry), na.rm = TRUE) %>%
group_by(GEOID, NAME, var) %>%
distinct(val) %>%
spread(var, val)
saveRDS(toy, "test_data.rds")
saveRDS(vt, "test_data2.rds")
census_data <- readRDS("test_data.rds")
census_data2 <- readRDS("test_data2.rds")
runApp()
vt <- get_acs(geography = "zcta",
variables = c(med_income = "B19013_001",
broadband = "B28002_004",
cash_assistance = "DP03_0072PE",
snap = "B99221_001"),
state = "VT",
geometry = TRUE,
year = 2019)
#
toy <- spread(vt, variable, estimate) %>%
select(-moe)  %>%
gather(var, val, -c(GEOID, NAME, geometry), na.rm = TRUE) %>%
group_by(GEOID, NAME, var) %>%
distinct(val) %>%
spread(var, val)
saveRDS(toy, "test_data.rds")
saveRDS(vt, "test_data2.rds")
census_data <- readRDS("test_data.rds")
census_data2 <- readRDS("test_data2.rds")
runApp()
runApp()
View(census_data2)
runApp()
runApp()
runApp()
runApp()
